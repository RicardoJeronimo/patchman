#!/bin/bash

usage() {
	# Shows all available arguments
	echo "$0 [-a] [-H hostname] [-T tag] [-h]"
	echo "-a: E-mails all recipients with available updates"
	echo "-H hostname: E-mails recipient with all available updates for given host"
	echo "-T tag: E-mails recipient with all available updates for given tag"
	echo "-h: Shows this help message and exits"
}

getConfig() {
	# Gets the configuration of section $1, parameter $2
	val=$(sed -nr "/\[$1\]/,/\[/{/^(\W|)$2=/p}" $CONF)
	val=${val#$2=}

	echo $val
}

email() {	
	SENDER=$(getConfig General sender)
	FULLNAME=$(getConfig General fullname)
	RECIPIENT=$(getConfig $TAGS recipient)
	
	EMAIL=$((
		echo "To: $RECIPIENT"; 
		echo "Subject: [$1] Update Report";
		echo "MIME-Version: 1.0";
		echo "Content-Type: text/html";
		echo "";
		cat $FILE  
		) | sendmail -t -f $SENDER -F "$FULLNAME")

	if [ -z $EMAIL ]; then
		echo 1
	else
		echo 0
	fi
}

report() {
	# Gets host info
	HOST=$(patchman -lh -H $1 | tail -n +3 | head -n -1 | sed 's/\x1b\[[0-9;]*m//g')
	
	# Gets the number of updates available for the host
	UPDATES=$(echo "$HOST" | awk -F ' : ' 'NR==10 { print $2 }')				
	
	if [ -z $UPDATES ]; then
		echo "[ERROR] $1: Hostname not found."
	elif [ $UPDATES -gt 0 ]; then	
		# Gets the host's tags to determine the recipient and directory
		TAGS=$(echo "$HOST" | awk -F ' : ' 'NR==11 { print $2 }')	
		
		# Creates the directory where the e-mail file will be stored, if it doesn't exist
		FILE=$DIR/$TAGS/$1/$1-$(date +%Y%m%d).html
		mkdir -p $(echo $FILE | sed 's|\(.*\)/.*|\1|')				
	
		# Creates the report if it doesn\'t exist already
		if [ ! -f $FILE ]; then	
			echo "[INFO] $1: Creating report..."
		
			echo "<html>" > $FILE
			echo "<style>" >> $FILE
			echo "body { font-family: \"Calibri\"  }" >> $FILE
			echo "#details table { border-collapse: collapse; width: 20em; }" >> $FILE
			echo "#updates table { border-collapse: collapse; width: 100%; }" >> $FILE
			echo "#details th, #details tr, #details td { text-align: left; }" >> $FILE
			echo "#updates th, #updates td { padding: 8px; text-align: left; border-bottom: 1px solid #ddd; }" >> $FILE
			echo "</style>" >> $FILE
	
			echo "<body>" >> $FILE
			echo "<p>There are new updates available for <b>$1</b>:</p><br>" >> $FILE
	
			echo "<div id=\"details\"><table>" >> $FILE
			echo "$HOST" | awk -F ' : ' 'NR!=2 && NR!=7 && NR!=9 && NR!=11 && NR!=13 && NR!=14 { print "<tr><th>"$1":</th><td>"$2"</td></tr>" }' >> $FILE
			echo "</table></div><br>" >> $FILE

			echo "<div id=\"updates\"><table>" >> $FILE
			echo "<tr><th>Current Version</th><th>New Version</th><th>Type</th></tr>" >> $FILE
			patchman -u -H $1 | tail -n +3 | head -n -1 | sed 's/\x1b\[[0-9;]*m//g' |  awk '{ print "<tr><td>"$1"</td><td>"$3"</td><td>"$4"</td></tr>" }' >> $FILE
			echo "</table></div><br>" >> $FILE
	
			echo "<p>Please contact your System Administrator in order to schedule the updates.</p>" >> $FILE
	
			echo "</body>" >> $FILE
			echo "</html>" >> $FILE
		else
			echo "[INFO] Report exists. Skipping."
		fi
	
		# E-mails the report
		echo "[INFO] $1: E-mailing report..."
				
		if [ $(email $1) ]; then
			echo "[INFO] $1: E-Mail report sent."
		else
			echo "[INFO] $1: E-Mail report failed."
		fi
		
		# Deletes the file
		if [ ! $KEEP ]; then
			rm $FILE
		fi
	else
		echo "[INFO] $1: There are no updates available."
	fi
}

# Checks if there are any parameters and if they start with "-"
if [ $# -gt 0 ] && [[ $1 == -* ]]; then
	CONF="/etc/patchman/patchman-email.conf"
	
	while getopts 'aH:T:h' arg; do
		case $arg in
			a)
				if [ ! -f $CONF ]; then
					echo "[ERROR] Configuration file not found."
					exit
				else
					DIR=$(getConfig General dir)
					KEEP=$(getConfig General keep)
					
					HOSTS=()
					HOSTS+=$(patchman -lh | tail -n +3 | awk -F ' : ' 'NR%16==3 { print $2 }' | sed 's/\x1b\[[0-9;]*m//g')

					for HOST in $HOSTS; do
						report $HOST
					done
				fi
			;;
			H)
				if [ ! -f $CONF ]; then
					echo "[ERROR] Configuration file not found."
					exit
				else
					DIR=$(getConfig General dir)
					KEEP=$(getConfig General keep)
					
					report ${OPTARG}
				fi
			;;
			T)				
				if [ ! -f $CONF ]; then
					echo "[ERROR] Configuration file not found."
					exit
				else
					DIR=$(getConfig General dir)
					KEEP=$(getConfig General keep)
					
					HOSTS=()
					HOSTS+=$(patchman -lh | tail -n +3 | awk -F ' : ' 'NR%16==3 || NR%16==12 {print $2}' | paste -d : - - | awk -F ':' '{ if( $2 == "'${OPTARG}'" ){ print $1 }}' | sed 's/\x1b\[[0-9;]*m//g')

					if [ -z $HOSTS ]; then
						echo "[ERROR] ${OPTARG}: Tag not found."
					else
						for HOST in $HOSTS; do
							report $HOST
						done
					fi
				fi
			;;
			h)
				usage
			;;
			*)
				usage
			;;
		esac
	done
else
	usage
fi

